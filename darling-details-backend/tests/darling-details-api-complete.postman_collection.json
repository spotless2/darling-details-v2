{
	"info": {
		"_postman_id": "b8c7d6e5-f4g3-h2i1-j0k9-l8m7n6o5p4q3",
		"name": "Darling Details API - Complete",
		"description": "Complete collection for testing Darling Details Admin Panel API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Welcome Route",
			"request": {
				"method": "GET",
				"url": {
					"raw": "{{baseUrl}}",
					"host": ["{{baseUrl}}"]
				},
				"description": "Tests the welcome route"
			}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Admin - Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"// Store the token if one is returned",
									"const responseJson = pm.response.json();",
									"if (responseJson.token) {",
									"    pm.collectionVariables.set(\"authToken\", responseJson.token);",
									"    console.log('Token saved:', responseJson.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@darlingdetails.com\",\n    \"password\": \"adminpassword\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "login"]
						},
						"description": "Login with admin credentials"
					}
				},
				{
					"name": "Admin - Verify Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token is valid\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.valid).to.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/verify-token",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "verify-token"]
						},
						"description": "Verify if the current token is valid"
					}
				}
			],
			"description": "Authentication related endpoints"
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response contains user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user).to.be.an('object');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/profile",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "profile"]
						},
						"description": "Get user profile using JWT token"
					}
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Store Settings",
			"item": [
				{
					"name": "Get Store Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/store-settings",
							"host": ["{{baseUrl}}"],
							"path": ["api", "store-settings"]
						},
						"description": "Get store settings information"
					}
				},
				{
					"name": "Create Store Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 or 400\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 400]);",
									"});",
									"",
									"if (pm.response.code === 400) {",
									"    pm.test(\"Error message if settings already exist\", function () {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.message).to.include('exist');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storeName\": \"Darling Details Boutique\",\n    \"contactEmail\": \"shop@darlingdetails.com\",\n    \"contactPhone\": \"555-123-4567\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/store-settings",
							"host": ["{{baseUrl}}"],
							"path": ["api", "store-settings"]
						},
						"description": "Create new store settings"
					}
				},
				{
					"name": "Update Store Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Store settings updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include('updated');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storeName\": \"Darling Details Shop\",\n    \"contactEmail\": \"contact@darlingdetails.com\",\n    \"contactPhone\": \"555-987-6543\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/store-settings",
							"host": ["{{baseUrl}}"],
							"path": ["api", "store-settings"]
						},
						"description": "Update existing store settings"
					}
				},
				{
					"name": "Delete Store Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-auth-token",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/store-settings",
							"host": ["{{baseUrl}}"],
							"path": ["api", "store-settings"]
						},
						"description": "Delete store settings (rarely used)"
					}
				},
				{
					"name": "Validation Error Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Validation error message received\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.message).to.include('Validation');",
									"    pm.expect(jsonData.errors).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-auth-token",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"storeName\": \"D\",\n    \"contactEmail\": \"not-a-valid-email\",\n    \"contactPhone\": \"123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/store-settings",
							"host": ["{{baseUrl}}"],
							"path": ["api", "store-settings"]
						},
						"description": "Tests validation errors with invalid data"
					}
				}
			],
			"description": "Store settings management endpoints"
		}
	]
}
